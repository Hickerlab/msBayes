/**
 * @file        partition_combinatorics_random.h
 * @authors     Jamie Oaks
 * @package     ABACUS (Approximate BAyesian C UtilitieS)
 * @brief       A collection of functions for partition combinatorics.
 * @copyright   Copyright (C) 2013 Jamie Oaks.
 *   This file is part of ABACUS.  ABACUS is free software; you can
 *   redistribute it and/or modify it under the terms of the GNU General Public
 *   License as published by the Free Software Foundation; either version 2 of
 *   the License, or (at your option) any later version.
 * 
 *   ABACUS is distributed in the hope that it will be useful, but WITHOUT ANY
 *   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 *   details.
 * 
 *   You should have received a copy of the GNU General Public License along
 *   with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef PARTITION_COMBINATORICS_RANDOM_H
#define PARTITION_COMBINATORICS_RANDOM_H

#include <gsl/gsl_rng.h>

#include "array_utils.h"
#include "partition_combinatorics.h"

int draw_int_partition_category(const gsl_rng * rng, int n);

/** 
 * A function for generating a random draw from a Dirichlet process.
 *
 * The function will generate one random mapping of `n` elements to subset
 * indices via a Dirichlet process.
 *
 * @param rng
 *   A Gnu Scientific Library (http://www.gnu.org/software/gsl/) instance of a
 *   random number generator (for compatibility with the msBayes package).
 * @param n
 *   The number of elements.
 * @param alpha
 *   The concentration parameter of the Dirichlet process.
 * @param elements
 *   An array of length n in which to store the subset indices generated by the
 *   process.
 */
int dirichlet_process_draw(const gsl_rng * rng, int n, double alpha,
        i_array * elements);

#endif /* PARTITION_COMBINATORICS_RANDOM_H */

